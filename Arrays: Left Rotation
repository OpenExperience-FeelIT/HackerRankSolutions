import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'rotLeft' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY a
     *  2. INTEGER d
     */

    public static List<Integer> rotLeft(List<Integer> a, int d) {
    // Write your code here
    int i;
    int size = a.size();
    List<Integer> arr = new ArrayList<Integer>(size);
     System.out.println("size : "+a.size() + "size : " + size);
    System.out.println("Initial : "+a);
   // arr[] = {0}
    System.out.println("Initial arr : "+arr);
    for(int l=0;l<size; l++)
    {
        arr.add(l,0);
    }
    
    /*
    for(i=0; i<d; i++)
    {
      int x=a.get(0);
      int j;
        for( j=0; j<a.size()-1; j++)
        { 
            a.set(j, a.get(j+1)); //a.set(index i, element e);   
        }
      a.set(j, x);
      System.out.println("After" + i + " : "+a);
    }*/
    for(int j=0; j<size; j++)
    {   //old index = j
        int newindex = (j+size-d)%size;
        arr.set(newindex, a.get(j));
    }
    return arr;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int d = Integer.parseInt(firstMultipleInput[1]);

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = Result.rotLeft(a, d);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}
